import{j as E}from"./jsx-runtime-D0140-Ba.js";import{r as t}from"./iframe-DQo0Yy5t.js";function X({defaultZoom:y=1,zoomUnit:s=.05,controller:r,onZoomChange:i,onMouseDown:u,onMouseUp:c,onWheel:l,children:k,...j}){const b=t.useRef(null),[v,o]=t.useState(y),[f,x]=t.useState(),[a,P]=t.useState({x:0,y:0}),S=t.useCallback(e=>{o(e)},[]),m=t.useCallback(()=>{o(e=>e+s)},[s]),d=t.useCallback(()=>{o(e=>{const n=(e-s)*10/10;return n<=s?e:n})},[s]),g=t.useCallback(()=>{o(y),P({x:0,y:0}),x(void 0)},[y]),C=t.useCallback(e=>{u==null||u(e),e.button===0&&x({x:e.clientX-(a.x||0),y:e.clientY-(a.y||0)})},[u,a]),O=t.useCallback(e=>{c==null||c(e),x(void 0)},[c]),T=t.useCallback(e=>{l==null||l(e),e.deltaY>0?m():d()},[l,m,d]);return t.useEffect(()=>{const e=b.current,n=p=>{f&&p.clientX>0&&p.clientY>0&&P({x:p.clientX-f.x,y:p.clientY-f.y})};return e&&window.addEventListener("mousemove",n),()=>{e&&window.removeEventListener("mousemove",n)}},[f]),t.useEffect(()=>{i==null||i(v)},[v,i]),t.useLayoutEffect(()=>{r==null||r({reset:g,zoom:S,zoomIn:m,zoomOut:d})},[r,S,m,d,g]),E.jsx("div",{className:"flex size-full cursor-move items-center justify-center overflow-hidden","data-component":"ZoomPanner",onMouseDown:C,onMouseUp:O,onWheel:T,ref:b,...j,children:E.jsx("div",{className:"pointer-events-none size-full select-none",draggable:!1,style:{transform:`translate(${a.x}px, ${a.y}px) scale(${v})`,transformOrigin:"center"},children:k})})}X.__docgenInfo={description:`줌패너 organism 컴포넌트 반환 메서드

@param {ZoomPannerProps} param0: ZoomPannerProps

@returns {React.JSX.Element} JSX`,methods:[],displayName:"ZoomPanner",props:{defaultZoom:{required:!1,tsType:{name:"number"},description:"기본 줌",defaultValue:{value:"1",computed:!1}},zoomUnit:{required:!1,tsType:{name:"number"},description:"줌 단위",defaultValue:{value:"0.05",computed:!1}},controller:{required:!1,tsType:{name:"signature",type:"function",raw:"(func: ZoomPannerControllerProps) => void",signature:{arguments:[{type:{name:"ZoomPannerControllerProps"},name:"func"}],return:{name:"void"}}},description:"컨트롤러 반환 메서드"},onZoomChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(zoom: number) => void",signature:{arguments:[{type:{name:"number"},name:"zoom"}],return:{name:"void"}}},description:"줌 변경 이벤트 메서드"}},composes:["DetailedHTMLProps"]};export{X as Z};

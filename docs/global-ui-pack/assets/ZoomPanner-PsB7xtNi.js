import{j as E}from"./jsx-runtime-BnHmloXs.js";import{r as t}from"./index-BCzbi48b.js";function X({defaultZoom:y=1,zoomUnit:s=.05,controller:u,onZoomChange:c,onMouseDown:l,onMouseUp:o,onWheel:f,children:k,...j}){const b=t.useRef(null),[v,m]=t.useState(y),[d,x]=t.useState(),[a,P]=t.useState({x:0,y:0}),S=t.useCallback(e=>{m(e)},[]),n=t.useCallback(()=>{m(e=>e+s)},[s]),r=t.useCallback(()=>{m(e=>{const i=(e-s)*10/10;return i<=s?e:i})},[s]),g=t.useCallback(()=>{m(y),P({x:0,y:0}),x(void 0)},[y]),C=t.useCallback(e=>{l==null||l(e),e.button===0&&x({x:e.clientX-(a.x||0),y:e.clientY-(a.y||0)})},[l,a]),O=t.useCallback(e=>{o==null||o(e),x(void 0)},[o]),T=t.useCallback(e=>{f==null||f(e),e.deltaY>0?n():r()},[f,n,r]);return t.useEffect(()=>{const e=b.current,i=p=>{d&&p.clientX>0&&p.clientY>0&&P({x:p.clientX-d.x,y:p.clientY-d.y})};return e&&window.addEventListener("mousemove",i),()=>{e&&window.removeEventListener("mousemove",i)}},[d,n,r]),t.useEffect(()=>{c==null||c(v)},[v,c]),t.useLayoutEffect(()=>{u==null||u({reset:g,zoom:S,zoomIn:n,zoomOut:r})},[u,S,n,r,g]),E.jsx("div",{className:"flex size-full cursor-move items-center justify-center overflow-hidden","data-component":"ZoomPanner",ref:b,onMouseDown:C,onMouseUp:O,onWheel:T,...j,children:E.jsx("div",{className:"pointer-events-none size-full select-none",draggable:!1,style:{transform:`translate(${a.x}px, ${a.y}px) scale(${v})`,transformOrigin:"center"},children:k})})}X.__docgenInfo={description:`줌패너 organism 컴포넌트 반환 메서드

@param {ZoomPannerProps} param0: ZoomPannerProps

@returns {React.JSX.Element} JSX`,methods:[],displayName:"ZoomPanner",props:{defaultZoom:{required:!1,tsType:{name:"number"},description:"기본 줌",defaultValue:{value:"1",computed:!1}},zoomUnit:{required:!1,tsType:{name:"number"},description:"줌 단위",defaultValue:{value:"0.05",computed:!1}},controller:{required:!1,tsType:{name:"signature",type:"function",raw:"(func: ZoomPannerControllerProps) => void",signature:{arguments:[{type:{name:"ZoomPannerControllerProps"},name:"func"}],return:{name:"void"}}},description:"컨트롤러 반환 메서드"},onZoomChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(zoom: number) => void",signature:{arguments:[{type:{name:"number"},name:"zoom"}],return:{name:"void"}}},description:"줌 변경 이벤트 메서드"}},composes:["DetailedHTMLProps"]};export{X as Z};

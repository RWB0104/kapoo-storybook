import{j as c}from"./jsx-runtime-BnHmloXs.js";import{r as u}from"./index-BzsBhNef.js";import{g as d}from"./storybook-Dtpa3Gtc.js";import{P as l}from"./Previewless-RlpCezBo.js";import{t as p}from"./theme-D_5m8He_.js";import"./jsx-runtime-BEh3FTX5.js";function f(e,o,t){u.useEffect(()=>{const r=new MutationObserver(s=>{s.forEach(o)});if(e!==null)if(typeof e=="string"){const s=document.querySelector(e);s&&r.observe(s,t)}else r.observe(e,t);return()=>{r.disconnect()}},[e,o,t])}function b({children:e}){const{setThemeState:o}=p();return f(document.documentElement,t=>{if(t.attributeName==="class"){const r=document.documentElement.classList.contains("dark");o(r?"dark":"light")}},{attributeFilter:["class"],attributeOldValue:!0,attributes:!0}),e}const E={component:b,parameters:d("Storybook 전용 테마 프로바이더 컴포넌트",["Storybook 환경에서 테마를 테스트하기 위한 전용 컴포넌트입니다.","`html` 태그의 `class`에서 테마 관련 클래스 변경이 감지될 경우, `themeState`에 이를 반영합니다."]),tags:["autodocs"],title:"organism/StorybookThemeProvider"},a={render:()=>c.jsx(l,{})};var n,m,i;a.parameters={...a.parameters,docs:{...(n=a.parameters)==null?void 0:n.docs,source:{originalSource:`{
  render: () => <Previewless />
}`,...(i=(m=a.parameters)==null?void 0:m.docs)==null?void 0:i.source}}};const k=["Playground"];export{a as Playground,k as __namedExportsOrder,E as default};

import{r as s}from"./index-BzsBhNef.js";import"./github-Bu9gdF8d.js";import{g as l,S as a,a as o}from"./storybook-CWpip0ZO.js";import{j as u}from"./jsx-runtime-BnHmloXs.js";import{L as y}from"./link-k0xUX2an.js";import"./jsx-runtime-BEh3FTX5.js";import"./segment-CIEV7OGa.js";import"./add-base-path-zrht_gGq.js";import"./router-context.shared-runtime-teXhwerE.js";import"./use-merged-ref-b3ysbXhA.js";function m({href:t,children:p,...d}){const[f,g]=s.useState(t);return s.useEffect(()=>{g(sessionStorage.getItem("referer")??t)},[t]),u.jsx(y,{"data-component":"RefererLink",...d,href:f,children:p})}m.__docgenInfo={description:`리퍼러 링크 atom 컴포넌트 반환 메서드

@param {RefererLinkProps} param0: RefererLinkProps

@returns {React.JSX.Element} JSX`,methods:[],displayName:"RefererLink"};const e="RefererLink",O={argTypes:{children:o("children",e),className:o("className",e),href:{description:"링크",table:{category:e,subcategory:a.PROP}},id:o("id",e),replace:{description:"replace 여부",table:{category:e,subcategory:a.PROP}},scroll:{description:"스크롤 유지 여부",table:{category:e,subcategory:a.PROP}}},args:{children:"Link",href:"/"},component:m,parameters:l("리퍼러 링크 컴포넌트",["세션 스토리지에 저장된 리퍼러 정보를 토대로 링크를 구성하는 컴포넌트입니다.","`referer` 키를 참조합니다. 세션 스토리지에 값이 없을 경우, 기존 href를 할당합니다."]),tags:["autodocs"],title:"atom/RefererLink"},r={};var n,i,c;r.parameters={...r.parameters,docs:{...(n=r.parameters)==null?void 0:n.docs,source:{originalSource:"{}",...(c=(i=r.parameters)==null?void 0:i.docs)==null?void 0:c.source}}};const _=["Playground"];export{r as Playground,_ as __namedExportsOrder,O as default};

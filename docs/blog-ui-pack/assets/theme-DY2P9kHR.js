import{R as u}from"./index-CKMdfnwt.js";const l=e=>{let n;const t=new Set,o=(s,S)=>{const c=typeof s=="function"?s(n):s;if(!Object.is(c,n)){const m=n;n=S??(typeof c!="object"||c===null)?c:Object.assign({},n,c),t.forEach(b=>b(n,m))}},r=()=>n,i={setState:o,getState:r,getInitialState:()=>f,subscribe:s=>(t.add(s),()=>t.delete(s))},f=n=e(o,r,i);return i},h=e=>e?l(e):l,p=e=>e;function d(e,n=p){const t=u.useSyncExternalStore(e.subscribe,()=>n(e.getState()),()=>n(e.getInitialState()));return u.useDebugValue(t),t}const g=e=>{const n=h(e),t=o=>d(n,o);return Object.assign(t,n),t},a=e=>e?g(e):g;a((e,n)=>({editorState:{preview:!0,wrap:!0},setEditorState:t=>{const o=typeof t=="function"?t(n().editorState):t;e({editorState:o})}}));a((e,n)=>({setRefererState:t=>{const o=typeof t=="function"?t(n().refererState):t;e({refererState:o})}}));const j=a((e,n)=>({setThemeState:t=>{const o=typeof t=="function"?t(n().themeState):t;localStorage.setItem("theme",o),e({themeState:o})},themeState:"light",toggleThemeState:()=>{e(({themeState:t})=>{const o=t==="light"?"dark":"light";return localStorage.setItem("theme",o),{themeState:o}})}}));export{j as t};

import{r as s,j as l}from"./iframe-CN7t70xJ.js";import{g as u,S as a,a as o}from"./storybook-CWpip0ZO.js";import{L as y}from"./link-D1X8DPKJ.js";import"./use-merged-ref-B351GWSM.js";function m({href:t,children:p,...d}){const[f,g]=s.useState(t);return s.useEffect(()=>{g(sessionStorage.getItem("referer")??t)},[t]),l.jsx(y,{"data-component":"RefererLink",...d,href:f,children:p})}m.__docgenInfo={description:`리퍼러 링크 atom 컴포넌트 반환 메서드

@param {RefererLinkProps} param0: RefererLinkProps

@returns {React.JSX.Element} JSX`,methods:[],displayName:"RefererLink"};const e="RefererLink",S={argTypes:{children:o("children",e),className:o("className",e),href:{description:"링크",table:{category:e,subcategory:a.PROP}},id:o("id",e),replace:{description:"replace 여부",table:{category:e,subcategory:a.PROP}},scroll:{description:"스크롤 유지 여부",table:{category:e,subcategory:a.PROP}}},args:{children:"Link",href:"/"},component:m,parameters:u("리퍼러 링크 컴포넌트",["세션 스토리지에 저장된 리퍼러 정보를 토대로 링크를 구성하는 컴포넌트입니다.","`referer` 키를 참조합니다. 세션 스토리지에 값이 없을 경우, 기존 href를 할당합니다."]),tags:["autodocs"],title:"atom/RefererLink"},r={};var n,c,i;r.parameters={...r.parameters,docs:{...(n=r.parameters)==null?void 0:n.docs,source:{originalSource:"{}",...(i=(c=r.parameters)==null?void 0:c.docs)==null?void 0:i.source}}};const b=["Playground"];export{r as Playground,b as __namedExportsOrder,S as default};

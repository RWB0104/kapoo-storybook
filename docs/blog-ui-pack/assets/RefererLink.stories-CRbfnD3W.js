import"./index-CKMdfnwt.js";import{g as d,S as t,a}from"./storybook-CWpip0ZO.js";import{j as f}from"./jsx-runtime-BnHmloXs.js";import{L as g}from"./link-DlSupBxQ.js";import"./jsx-runtime-BEh3FTX5.js";import"./segment-CIEV7OGa.js";import"./add-base-path-zrht_gGq.js";import"./router-context.shared-runtime-Cv5SBY9_.js";import"./use-merged-ref-CTvqUzqe.js";function c({children:m,...o}){const p=sessionStorage.getItem("referer")??o.href;return f.jsx(g,{"data-component":"RefererLink",...o,href:p,children:m})}c.__docgenInfo={description:`리퍼러 링크 atom 컴포넌트 반환 메서드

@param {RefererLinkProps} param0: RefererLinkProps

@returns {React.JSX.Element} JSX`,methods:[],displayName:"RefererLink"};const e="RefererLink",S={argTypes:{children:a("children",e),className:a("className",e),href:{description:"링크",table:{category:e,subcategory:t.PROP}},id:a("id",e),replace:{description:"replace 여부",table:{category:e,subcategory:t.PROP}},scroll:{description:"스크롤 유지 여부",table:{category:e,subcategory:t.PROP}}},args:{children:"Link",href:"/"},component:c,parameters:d("리퍼러 링크 컴포넌트",["세션 스토리지에 저장된 리퍼러 정보를 토대로 링크를 구성하는 컴포넌트입니다.","`referer` 키를 참조합니다. 세션 스토리지에 값이 없을 경우, 기존 href를 할당합니다."]),tags:["autodocs"],title:"atom/RefererLink"},r={};var s,n,i;r.parameters={...r.parameters,docs:{...(s=r.parameters)==null?void 0:s.docs,source:{originalSource:"{}",...(i=(n=r.parameters)==null?void 0:n.docs)==null?void 0:i.source}}};const x=["Playground"];export{r as Playground,x as __namedExportsOrder,S as default};

import{r as s,a as P,j as a}from"./iframe-B6LbHIHF.js";import{g as j,S as f}from"./storybook-CWpip0ZO.js";import{P as S,p as y}from"./ProjectCard-CTBGg6Ei.js";import{a as h}from"./Img-DWQHdLIr.js";import"./Typography-CIACGiNj.js";import"./link-CjRX17j4.js";function c({list:t}){const[m,p]=s.useState(null),[l,d]=s.useState(!1);return P(m,e=>{e.isIntersecting&&d(e.isIntersecting)}),a.jsx("div",{className:"grid grid-cols-1 xs:grid-cols-2 gap-2 md:grid-cols-3 lg:grid-cols-4","data-component":"ProjectList",ref:p,children:t.map(({projectId:e,...g},u)=>a.jsx(S,{className:h("scale-0",{"animate-show":l}),projectId:e,scroll:!1,style:{animationDelay:`${u*.1}s`},...g},e))})}c.__docgenInfo={description:`프로젝트 리스트 organism 컴포넌트 반환 메서드

@param {ProjectListProps} param0: ProjectListProps

@returns {React.JSX.Element} JSX`,methods:[],displayName:"ProjectList",props:{list:{required:!0,tsType:{name:"Array",elements:[{name:"ProjectCardProps"}],raw:"ProjectCardProps[]"},description:"프로젝트 배열"}}};const x="ProjectList",N={args:{list:y.map(({meta:t})=>({author:t.author,completedAt:t.completed,createdAt:t.created,icon:t.icon,projectId:"",thumbnail:t.images[0],title:t.title}))},argTypes:{list:{table:{category:x,subcategory:f.PROP}}},component:c,parameters:j("프로젝트 리스트 컴포넌트",["프로젝트 카드 목록을 표현하기 위한 컴포넌트입니다."],{nextjs:{appDirectory:!0,navigation:{pathname:"/"}}}),tags:["autodocs"],title:"organism/ProjectList"},r={};var o,i,n;r.parameters={...r.parameters,docs:{...(o=r.parameters)==null?void 0:o.docs,source:{originalSource:"{}",...(n=(i=r.parameters)==null?void 0:i.docs)==null?void 0:n.source}}};const R=["Playground"];export{r as Playground,R as __namedExportsOrder,N as default};
